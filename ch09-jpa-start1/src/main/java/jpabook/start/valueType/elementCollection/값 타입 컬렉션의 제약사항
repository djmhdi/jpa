엔티티는 식별자가 있으므로 엔티티의 값을 벼경해도 식별자로 데이터베이스에서 저장된 원본 데이터를
쉽게 찾아서 변경할 수 있다.
반면에 값 타입은 식별자라는 개념이 없고 단순한 값들의 모음이므로 값을 변경해버리면 데이터베이스에
저장된 원본 데이터를 찾기 어렵기 때문에 JPA 구현체들은 값 타입 컬렉션에 변경 사항이 발생하면,
값 타입 컬렉션이 매핑된 테이블의 연관된 모든 데이터를 삭제하고, 현재 값 타입 컬렉션에 있는 모든 값을
데이터베이스에 다시 저장한다.

따라서 실무에서는 값 타입 걸렉션이 매핑된 테이블에 데이터가 많다면 값 타입 컬렉션 대신에 일대다 관계를
고려해야 한다.

추가로 값 타입 컬렉션을 매핑하는 테이블은 모든 컬럼을 묶어서 기본 키를 구성해야 한다.
따라서 데이터베이스 기본 키 제약 조건으로 인해 컬럼에 null을 입력할 수 없고, 같은 값을 중복해서
저장할 수 없는 제약도 있다.

지금까지 설명한 문제를 해결하려면 값 타입 컬렉션을 사용하는 대신에 일대다 관계로 설정하고
영속성 전이(Cascade) + 고아 객체 제거(ORPHAN REMOVE)기능을 적용하면 값 타입 컬렉션처럼 사용할 수 있다. 